{"ast":null,"code":"// import React, { createContext, useReducer, useContext } from \"react\";\n// import {\n//   // SET_CURRENT_POST,\n//   // REMOVE_POST,\n//   // UPDATE_POSTS,\n//   // ADD_POST,\n//   // ADD_FAVORITE,\n//   // UPDATE_FAVORITES,\n//   // REMOVE_FAVORITE,\n//   // LOADING\n// } from \"./actions\";\n// const StoreContext = createContext();\n// const { Provider } = StoreContext;\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//   case SET_CURRENT_POST:\n//     return {\n//       ...state,\n//       currentPost: action.post,\n//       loading: false\n//     };\n//   case UPDATE_POSTS:\n//     return {\n//       ...state,\n//       posts: [...action.posts],\n//       loading: false\n//     };\n//   case ADD_POST:\n//     return {\n//       ...state,\n//       posts: [action.post, ...state.posts],\n//       loading: false\n//     };\n//   case REMOVE_POST:\n//     return {\n//       ...state,\n//       posts: state.posts.filter((post) => {\n//         return post._id !== action._id; \n//       })\n//     };\n//   case ADD_FAVORITE:\n//     return {\n//       ...state,\n//       favorites: [action.post, ...state.favorites],\n//       loading: false\n//     };\n//   case UPDATE_FAVORITES:\n//     return {\n//       ...state,\n//       favorites: [...state.favorites],\n//       loading: false\n//     };\n//   case REMOVE_FAVORITE:\n//     return {\n//       ...state,\n//       favorites: state.favorites.filter((post) => {\n//         return post._id !== action._id; \n//       })\n//     };\n//   case LOADING:\n//     return {\n//       ...state,\n//       loading: true\n//     };\n//   default:\n//     return state;\n//   }\n// };\n// const StoreProvider = ({ value = [], ...props }) => {\n//   const [state, dispatch] = useReducer(reducer, {\n//     posts: [],\n//     currentPost: {\n//       _id: 0,\n//       title: \"\",\n//       body: \"\",\n//       author: \"\"\n//     },\n//     favorites: [],\n//     loading: false\n//   });\n//   return <Provider value={[state, dispatch]} {...props} />;\n// };\n// const useStoreContext = () => {\n//   return useContext(StoreContext);\n// };\n// export { StoreProvider, useStoreContext };","map":{"version":3,"sources":["F:/Users/coryq/Desktop/bootcamp/activities-local/20-State/02-Homework/portfolio/client/src/utils/GlobalState.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { createContext, useReducer, useContext } from \"react\";\n// import {\n//   // SET_CURRENT_POST,\n//   // REMOVE_POST,\n//   // UPDATE_POSTS,\n//   // ADD_POST,\n//   // ADD_FAVORITE,\n//   // UPDATE_FAVORITES,\n//   // REMOVE_FAVORITE,\n//   // LOADING\n// } from \"./actions\";\n\n// const StoreContext = createContext();\n// const { Provider } = StoreContext;\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//   case SET_CURRENT_POST:\n//     return {\n//       ...state,\n//       currentPost: action.post,\n//       loading: false\n//     };\n\n//   case UPDATE_POSTS:\n//     return {\n//       ...state,\n//       posts: [...action.posts],\n//       loading: false\n//     };\n\n//   case ADD_POST:\n//     return {\n//       ...state,\n//       posts: [action.post, ...state.posts],\n//       loading: false\n//     };\n\n//   case REMOVE_POST:\n//     return {\n//       ...state,\n//       posts: state.posts.filter((post) => {\n//         return post._id !== action._id; \n//       })\n//     };\n\n//   case ADD_FAVORITE:\n//     return {\n//       ...state,\n//       favorites: [action.post, ...state.favorites],\n//       loading: false\n//     };\n\n//   case UPDATE_FAVORITES:\n//     return {\n//       ...state,\n//       favorites: [...state.favorites],\n//       loading: false\n//     };\n\n//   case REMOVE_FAVORITE:\n//     return {\n//       ...state,\n//       favorites: state.favorites.filter((post) => {\n//         return post._id !== action._id; \n//       })\n//     };\n\n//   case LOADING:\n//     return {\n//       ...state,\n//       loading: true\n//     };\n\n//   default:\n//     return state;\n//   }\n// };\n\n// const StoreProvider = ({ value = [], ...props }) => {\n//   const [state, dispatch] = useReducer(reducer, {\n//     posts: [],\n//     currentPost: {\n//       _id: 0,\n//       title: \"\",\n//       body: \"\",\n//       author: \"\"\n//     },\n//     favorites: [],\n//     loading: false\n//   });\n\n//   return <Provider value={[state, dispatch]} {...props} />;\n// };\n\n// const useStoreContext = () => {\n//   return useContext(StoreContext);\n// };\n\n// export { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}